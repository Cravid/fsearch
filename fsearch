#!/usr/bin/env bash
set -euo pipefail

usage="$(basename "$0") [-h] [--help] [--gt size] [--lt size] [root] [string] -- search for string in filename or content

DESCRIPTION:
    -h		Show this help message
    --help	Same as -h
    --gt	Search for any file with size greater than the specified number
    -gt		Same as --gt
    --lt	Search for any file with size lower than the specified number
    -lt		Same as -lt

PRIMARIES:
    root	Directory root for search
    string	The search term
"
usage() {
    echo "$usage"
    exit 1
}

GT=
LT=

for option in "$@"
do
    case $option in
        -h|--help) usage;;
        -gt=*|--gt=*) GT=$(dehumanise "${option#*=}"); shift;;
        -gt|--gt) GT=$(dehumanise $2); shift; shift;;
        -lt=*|--lt=*) LT=$(dehumanise "${option#*=}"); shift;;
        -lt|--lt) LT=$(dehumanise $2); shift; shift;;
        -*|--*|\?) printf "illegal option: %s\n\n" "$option" >&2; usage;;
    esac
done

if [ $# -eq 2 ]; then
    root="$1"
    string="$2"
elif [ $# -eq 1 ]; then
    root="$1"
    string=""
else
    root=.
    string=""
fi


##


if [[ ! -d $root ]]; then
    printf "ERROR: root is not a directory, given \"%s\"\n\n" "$root" >&2
    usage
fi

BASE="find -L ${root} -type f"

if [[ ! -z $GT ]]; then
    BASE="${BASE} -size +${GT}c"
fi
if [[ ! -z $LT ]]; then
    BASE="${BASE} -size -${LT}c"
fi

CMD="$BASE -print0"

COUNT=0

$CMD |
    {
        while IFS= read -r -d $'\0' file; do
            if [ ! -z $string ]; then
                if [ -z "${filename##*$string*}" ] || grep -q $string $file; then
                    echo $file
                fi
            else
                echo $file
            fi
        done
    }


exit $?
